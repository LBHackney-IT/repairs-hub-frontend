version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.4.0
  aws_assume_role: lbh-hackit/aws_assume_role@0.1.0
  browser-tools: circleci/browser-tools@2.1.0
  node: circleci/node@7.1.0

executors:
  node-executor:
    docker:
      - image: cimg/node:22.16.0-browsers
  docker-python:
    docker:
      - image: cimg/python:3.12

references:
  workspace_root: &workspace_root '~'
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

jobs:
  install-dependencies:
    executor: node-executor
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn

  tests:
    executor: node-executor
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Run Linter
          command: yarn lint
      - run:
          name: Run Tests
          command: |
            export NEXT_PUBLIC_ENV_NAME=test
            export NEXT_PUBLIC_NODE_ENV=development
            export NEXT_PUBLIC_BUDGET_CODE_SELECTION_ENABLED=true
            export NEXT_PUBLIC_SUPPORT_LINK=https://sites.google.com/hackney.gov.uk/repairshubsupport
            export NEXT_PUBLIC_OUT_OF_HOURS_LINK=https://hackney.gov.uk
            yarn test:unit
  e2e:
    executor: node-executor
    parallelism: 4
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - browser-tools/install_chrome
      - browser-tools/install_chromedriver
      - run:
          name: Force install
          command: yarn cypress install --force
      - run:
          name: Run E2E Tests
          command: |
            export NEXT_PUBLIC_ENV_NAME=test
            export NEXT_PUBLIC_SCHEDULER_URL=$NEXT_PUBLIC_SCHEDULER_URL
            export NEXT_PUBLIC_OUT_OF_HOURS_LINK=https://hackney.gov.uk
            export NEXT_PUBLIC_PROPERTIES_PAGE_SIZE=$NEXT_PUBLIC_PROPERTIES_PAGE_SIZE
            export NEXT_PUBLIC_SUPPORT_LINK=https://sites.google.com/hackney.gov.uk/repairshubsupport
            export NEXT_PUBLIC_BUDGET_CODE_SELECTION_ENABLED=true

            # Split tests and run them in parallel using CircleCI's built in timing-based splitter
            find cypress/e2e -type f -name "*.[jt]s" | sort | uniq > circleci_test_files.txt
            cat circleci_test_files.txt

            # Cypress expects files to be separated with commas
            TESTFILES=$(circleci tests split --split-by=timings circleci_test_files.txt | perl -pe 'chomp if eof' | tr '\n' ',')
            echo $TESTFILES
            NODE_ENV=test yarn start-test http://localhost:5001 "yarn cy:run:audit --reporter cypress-multi-reporters --reporter-options configFile=cypress-reporter-config.json --spec \"$TESTFILES\""
            yarn node scripts/fix-junit-xml.js
      - store_artifacts:
          path: cypress/screenshots
      - store_artifacts:
          path: cypress/videos
      - store_artifacts:
          path: cypress/reports
      - store_test_results:
          path: cypress/results/

  build-deploy-development:
    executor: node-executor
    steps:
      - *attach_workspace
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - aws-cli/install
      - run:
          name: deploy
          command: |
            export NEXT_PUBLIC_NODE_ENV=production
            export NEXT_PUBLIC_ENV_NAME=development
            export NEXT_PUBLIC_SCHEDULER_URL=$DRS_URL_STAGING
            export NEXT_PUBLIC_OUT_OF_HOURS_LINK=$OUT_OF_HOURS_LINK_STAGING
            export NEXT_PUBLIC_DRS_SESSION_COOKIE_NAME=$DRS_SESSION_COOKIE_NAME
            export NEXT_PUBLIC_STATIC_IMAGES_BUCKET_URL=$PUBLIC_STATIC_IMAGES_BUCKET_URL_DEVELOPMENT
            export NEXT_PUBLIC_PROPERTIES_PAGE_SIZE=$NEXT_PUBLIC_PROPERTIES_PAGE_SIZE
            export NEXT_PUBLIC_SUPPORT_LINK=$SUPPORT_LINK
            export NEXT_PUBLIC_SENTRY_ENVIRONMENT=development
            export NEXT_PUBLIC_SENTRY_RELEASE=$CIRCLE_SHA1
            export NEXT_PUBLIC_SENTRY_DEBUG=false
            export NEXT_PUBLIC_SENTRY_DSN=$SENTRY_DSN
            export NEXT_PUBLIC_BUDGET_CODE_SELECTION_ENABLED=$NEXT_PUBLIC_BUDGET_CODE_SELECTION_ENABLED_DEVELOPMENT
            export NEXT_PUBLIC_MMH_FRONTEND_URL=$NEXT_PUBLIC_MMH_FRONTEND_URL_DEVELOPMENT
            export NEXT_PUBLIC_WARRANTIES_SPREADSHEET_ID=$WARRANTIES_SPREADSHEET_ID
            
            # Build application
            yarn build

            # Fetch production dependencies
            rm -rf node_modules
            yarn install --production --frozen-lockfile

            # view size of /@next
            npx --yes serverless deploy --stage development
            
            # Keep in case of later build size issues
            # du -sh ./build/_next/* 2>/dev/null | sort -hr
            # ls -lh .serverless/*.zip

  build-deploy-staging:
    executor: node-executor
    steps:
      - *attach_workspace
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - aws-cli/install
      - run:
          name: deploy
          command: |
            export NEXT_PUBLIC_NODE_ENV=production
            export NEXT_PUBLIC_ENV_NAME=staging
            export NEXT_PUBLIC_SCHEDULER_URL=$DRS_URL_STAGING
            export NEXT_PUBLIC_OUT_OF_HOURS_LINK=$OUT_OF_HOURS_LINK_STAGING
            export NEXT_PUBLIC_DRS_SESSION_COOKIE_NAME=$DRS_SESSION_COOKIE_NAME
            export NEXT_PUBLIC_STATIC_IMAGES_BUCKET_URL=$PUBLIC_STATIC_IMAGES_BUCKET_URL_STAGING
            export NEXT_PUBLIC_PROPERTIES_PAGE_SIZE=$NEXT_PUBLIC_PROPERTIES_PAGE_SIZE
            export NEXT_PUBLIC_SUPPORT_LINK=$SUPPORT_LINK
            export NEXT_PUBLIC_SENTRY_ENVIRONMENT=staging
            export NEXT_PUBLIC_SENTRY_RELEASE=$CIRCLE_SHA1
            export NEXT_PUBLIC_SENTRY_DEBUG=false
            export NEXT_PUBLIC_SENTRY_DSN=$SENTRY_DSN
            export NEXT_PUBLIC_BUDGET_CODE_SELECTION_ENABLED=$NEXT_PUBLIC_BUDGET_CODE_SELECTION_ENABLED_STAGING
            export NEXT_PUBLIC_MMH_FRONTEND_URL=$NEXT_PUBLIC_MMH_FRONTEND_URL_STAGING
            export NEXT_PUBLIC_WARRANTIES_SPREADSHEET_ID=$WARRANTIES_SPREADSHEET_ID
            yarn build
            rm -rf node_modules
            yarn install --production --frozen-lockfile
            npx --yes serverless deploy --stage staging


  build-deploy-production:
    executor: node-executor
    steps:
      - *attach_workspace
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - aws-cli/install
      - run:
          name: deploy
          command: |
            export NEXT_PUBLIC_NODE_ENV=production
            export NEXT_PUBLIC_ENV_NAME=production
            export NEXT_PUBLIC_SCHEDULER_URL=$DRS_URL_PRODUCTION
            export NEXT_PUBLIC_OUT_OF_HOURS_LINK=$OUT_OF_HOURS_LINK_PRODUCTION
            export NEXT_PUBLIC_DRS_SESSION_COOKIE_NAME=$DRS_SESSION_COOKIE_NAME
            export NEXT_PUBLIC_STATIC_IMAGES_BUCKET_URL=$PUBLIC_STATIC_IMAGES_BUCKET_URL_PRODUCTION
            export NEXT_PUBLIC_PROPERTIES_PAGE_SIZE=$NEXT_PUBLIC_PROPERTIES_PAGE_SIZE
            export NEXT_PUBLIC_SUPPORT_LINK=$SUPPORT_LINK
            export NEXT_PUBLIC_SENTRY_ENVIRONMENT=production
            export NEXT_PUBLIC_SENTRY_RELEASE=$CIRCLE_SHA1
            export NEXT_PUBLIC_SENTRY_DEBUG=false
            export NEXT_PUBLIC_SENTRY_DSN=$SENTRY_DSN
            export NEXT_PUBLIC_BUDGET_CODE_SELECTION_ENABLED=$NEXT_PUBLIC_BUDGET_CODE_SELECTION_ENABLED_PRODUCTION
            export NEXT_PUBLIC_MMH_FRONTEND_URL=$NEXT_PUBLIC_MMH_FRONTEND_URL_PRODUCTION
            export NEXT_PUBLIC_WARRANTIES_SPREADSHEET_ID=$WARRANTIES_SPREADSHEET_ID
            yarn build
            rm -rf node_modules
            yarn install --production --frozen-lockfile
            npx --yes serverless deploy --stage production

  assume-role-development:
    executor: docker-python
    steps:
      - checkout
      - aws_assume_role/assume_role:
          account: $AWS_ACCOUNT_DEVELOPMENT
          profile_name: default
          role: 'LBH_Circle_CI_Deployment_Role'
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - .aws

  assume-role-staging:
    executor: docker-python
    steps:
      - checkout
      - aws_assume_role/assume_role:
          account: $AWS_ACCOUNT_STAGING
          profile_name: default
          role: 'LBH_Circle_CI_Deployment_Role'
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - .aws

  assume-role-production:
    executor: docker-python
    steps:
      - checkout
      - aws_assume_role/assume_role:
          account: $AWS_ACCOUNT_PRODUCTION
          profile_name: default
          role: 'LBH_Circle_CI_Deployment_Role'
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - .aws

workflows:
  continuous-delivery:
    max_auto_reruns: 1
    jobs:
      - tests
      - e2e
      - assume-role-development:
          context: api-assume-role-housing-development-context
          requires:
            - tests
            - e2e
          filters:
            branches:
              only: develop
      - build-deploy-development:
          requires:
            - assume-role-development
          context:
            - "Serverless Framework"
          filters:
            branches:
              only: develop
      - assume-role-staging:
          context: api-assume-role-staging-context
          requires:
            - tests
            - e2e
          filters:
            branches:
              only: main
      - build-deploy-staging:
          requires:
            - assume-role-staging
          context:
            - "Serverless Framework"
          filters:
            branches:
              only: main
      - permit-deploy-production:
          type: approval
          requires:
            - build-deploy-staging
          filters:
            branches:
              only: main
      - assume-role-production:
          context: api-assume-role-housing-production-context
          requires:
            - permit-deploy-production
          filters:
            branches:
              only: main
      - build-deploy-production:
          requires:
            - assume-role-production
          context:
            - "Serverless Framework"
          filters:
            branches:
              only: main
